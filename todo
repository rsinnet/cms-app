1. Setup MySQL databases for storing article metadata.
2. Query database with create content, either using AJEX and jQuery or possibly Perl or PHP. Do I have Tomcat for even more ineractivity and control? But Java is dead...
3. Link in with facebook API. Perhaps PHP would be a good choice.
4. Maybe a storage and retreival system for html? store each part of the page?

Important:

# Use SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())) to create ids so the imput dimension is larger than or equal to the output.
# Hash collisions probability will increase if output space is reduced by providing less entropy than 160 bit.

tables:


authors:
  - id
  - name
  - primary_email
  - primary_website

articles:
  - id
  - title
  - date
  - file

authors_resources_graph:
  - id
  - author_id
  - resource_id

articles_resources_graph:
  - id
  - article_id
  - author_id


CREATE DATABASE rsinnet_iamphilosopher;
CREATE USER 'rsinnet_webuser'@'localhost' IDENTIFIED BY 'Z?Z07uwL#(4g';
GRANT SELECT ON rsinnet_iamphilosopher.* TO 'rsinnet_webuser'@'localhost';
FLUSH PRIVILEGES;

CREATE USER 'rsinnet_cmuser'@'localhost' IDENTIFIED BY 't[6AF!p_X2k4';
GRANT SELECT, INSERT, UPDATE, DELETE ON rsinnet_iamphilosopher.* TO 'rsinnet_cmuser'@'localhost';
FLUSH_PRIVILEGES;


USE rsinnet_iamphilosopher;

CREATE TABLE IF NOT EXISTS authors (
       id CHAR(40) NOT NULL PRIMARY KEY,
       name VARCHAR(255) NOT NULL,
       email VARCHAR(255) NOT NULL);

CREATE TABLE IF NOT EXISTS topics (
       id CHAR(40) NOT NULL PRIMARY KEY,
       name VARCHAR(255) NOT NULL);

CREATE TABLE IF NOT EXISTS articles (
       id CHAR(40) NOT NULL PRIMARY KEY,
       title VARCHAR(2000) NOT NULL,
       subtitle VARCHAR(2000),
       date DATETIME NOT NULL,
       topic_id CHAR(40) NOT NULL,
       FOREIGN KEY (topic_id) REFERENCES topics(id));

CREATE TABLE IF NOT EXISTS articles_authors_graph (
       id CHAR(40) NOT NULL PRIMARY KEY,
       article_id CHAR(40) NOT NULL,
       author_id CHAR(40) NOT NULL,
       FOREIGN KEY (article_id) REFERENCES articles(id),
       FOREIGN KEY (author_id) REFERENCES authors(id));

CREATE TABLE IF NOT EXISTS articles_topics_graph (
       id CHAR(40) NOT NULL PRIMARY KEY,
       article_id CHAR(40) NOT NULL,
       topic_id CHAR(40) NOT NULL,
       FOREIGN KEY (article_id) REFERENCES articles(id),
       FOREIGN KEY (topic_id) REFERENCES topics(id));

CREATE TABLE IF NOT EXISTS resource_types (
       id CHAR(40) NOT NULL PRIMARY KEY,
       type VARCHAR(2000) NOT NULL);

INSERT INTO resource_types (id, type) VALUES (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), "Article"), (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), "Image"), (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), "String");

INSERT INTO resource_types (id, type) VALUES (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), "Attribution");

CREATE TABLE IF NOT EXISTS resources (
       id CHAR(40) NOT NULL PRIMARY KEY,
       resource_type_id CHAR(40) NOT NULL,
       rkey VARCHAR(2000),
       rvalue VARCHAR(2000),
       FOREIGN KEY (resource_type_id) REFERENCES resource_types(id)
);
      
INSERT INTO resources (id, resource_type_id, rvalue) VALUES
       (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), (SELECT id FROM resource_types WHERE type="Attribution"),
       "By CASASCIUS (CASASCIUS) [<a href='http://creativecommons.org/licenses/by/3.0'>CC-BY-3.0</a>], via <a href='http://commons.wikimedia.org'>Wikimedia Commons</a>");
INSERT INTO resources (id, resource_type_id, rvalue) VALUES
       (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), (SELECT id FROM resource_types WHERE type="Attribution"),
       'By Bernard Gagnon (Own work) [<a href="http://www.gnu.org/copyleft/fdl.html">GFDL</a> or <a href="http://creativecommons.org/licenses/by-sa/3.0">CC-BY-SA-3.0-2.5-2.0-1.0</a>], <a href="http://commons.wikimedia.org/wiki/File%3AAl-Hamidiyah_Souq_02.jpg">via  Wikimedia Commons</a>');

CREATE TABLE IF NOT EXISTS resources_graph (
       id CHAR(40) NOT NULL PRIMARY KEY,
       resource1_id CHAR(40) NOT NULL,
       resource2_id CHAR(40) NOT NULL,
       FOREIGN KEY (resource1_id) REFERENCES resources(id),
       FOREIGN KEY (resource2_id) REFERENCES resources(id)
);

CREATE TABLE IF NOT EXISTS articles_resources_graph (
       id CHAR(40) NOT NULL PRIMARY KEY,
       article_id CHAR(40) NOT NULL,
       resource_id CHAR(40) NOT NULL,
       FOREIGN KEY (article_id) REFERENCES articles(id),
       FOREIGN KEY (resource_id) REFERENCES resources(id));

INSERT INTO articles_resources_graph (article_id, resource_id) VALUES (1, 5);
INSERT INTO articles_resources_graph (article_id, resource_id) VALUES (3, 6);

INSERT INTO topics (id, name) VALUES
        (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'Politics'),
        (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'Economy'),
	(SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'Law'),
	(SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'Philosophy'),
	(SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'Science');

INSERT INTO authors (id, name, email) VALUES (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'Ryan W. Sinnet', 'ryan@iamphilosopher.com');

INSERT INTO articles (id, title, subtitle, date, topic_id) VALUES (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'The Syria Situation', 'Suspicions and Allegations', '2013-08-29 21:00:00', (SELECT id FROM topics WHERE name = 'Politics'));
INSERT INTO articles (id, title, subtitle, date, topic_id) VALUES (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'The Case for Bitcoin', 'A Cryptocurrency Revolution', NOW(), (SELECT id FROM topics WHERE name = 'Economy'));

INSERT INTO articles (id, title, subtitle, date, topic_id) VALUES (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())), 'Rights vs. Priviliges', 'A Reasoned Explanation', NOW(), (SELECT id FROM topics WHERE name = 'Law'));


INSERT INTO resources (resource_type_id) VALUES
       ((SELECT id from resource_types WHERE type="Image"))

INSERT INTO resources (resource_type_id, rkey, rvalue)

INSERT INTO resources_graph (resource1_id, resource2_id) VALUES
       ((SELECT id from 

INSERT INTO resources (id, resource_type_id, rkey, rvalue) VALUES
       (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())),
        (SELECT rt.id FROM resource_types AS rt WHERE rt.type = 'String'),
       'Extension', 'jpg')

# jpg key
INSERT INTO resources_graph (id, resource1_id, resource2_id) VALUES
       (SHA1(CONCAT(RAND(), RAND(), RAND(), RAND())),
       '4519f966fe17ab0a4912eac23517c0d5b9cb2467',
       '590da4f30aab220e68c11f5820f369c6e50f2f40')

# Adding new images to the resources table
INSERT INTO resources (resource_type_id, rvalue) VALUES ((SELECT rt.id FROM resource_types AS rt WHERE rt.type="Image"), sha2(rand(), 256))

SELECT id FROM resources ORDER BY DESC;

INSERT INTO resources (resource_type_id, rkey, rvalue) VALUES ((SELECT rt.id FROM resource_types AS rt WHERE rt.type="String"), "extension", "jpg")

INSERT INTO resources_graph(resource1_id, resource2_id) VALUES (id1, id2);


// rEPLACE WITH RESOURCES!
CREATE TABLE IF NOT EXISTS contactinfo (
       id CHAR(40) NOT NULL PRIMARY KEY
       contact_type VARCHAR(255) NOT NULL,
       value VARCHAR(2000) NOT NULL);

CREATE TABLE IF NOT EXISTS authors_contactinfo_graph (
       id CHAR(40) NOT NULL PRIMARY KEY,
       author_id CHAR(40) NULL,
       contactinfo_id CHAR(40) NOT NULL,
       FOREIGN KEY (author_id) REFERENCES authors(id),
       FOREIGN KEY (contactinfo_id) REFERENCES contactinfo(id));

